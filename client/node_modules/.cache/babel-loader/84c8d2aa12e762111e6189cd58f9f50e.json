{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/src/App.js\";\nimport React, { Component } from 'react';\nimport CoinTable from './components/CoinTable';\nimport SearchBar from './components/SearchBar';\nimport axios from 'axios';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // set state with coinData (to eventually call an API) and the searcbar text\n\n    _this.state = {\n      coinData: [],\n      searchText: ''\n    };\n    _this.handleSearchTextChange = _this.handleSearchTextChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //handle the searched text and update based on value\n\n\n  _createClass(App, [{\n    key: \"handleSearchTextChange\",\n    value: function handleSearchTextChange(searchText) {\n      this.setState({\n        searchText: searchText\n      });\n    } //get the latest coins from the Express server at localhost:5000\n\n  }, {\n    key: \"getLatestCoins\",\n    value: function () {\n      var _getLatestCoins = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, _ref, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:5000/api/latestCoins');\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res;\n\n              case 5:\n                _ref = _context.sent;\n                data = _ref.data;\n                console.log(data);\n                this.setState({\n                  coinData: data\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getLatestCoins() {\n        return _getLatestCoins.apply(this, arguments);\n      }\n\n      return getLatestCoins;\n    }() // once the component mounts, loads a default page of coins before searching\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLatestCoins();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Cryptocurrency Analysis\"), React.createElement(SearchBar, {\n        searchText: this.state.searchText,\n        onSearchTextChange: this.handleSearchTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(CoinTable, {\n        coins: this.state.coinData,\n        searchText: this.state.searchText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/danielbuchholz/Desktop/full-stack-cryptos/client/src/App.js"],"names":["React","Component","CoinTable","SearchBar","axios","App","props","state","coinData","searchText","handleSearchTextChange","bind","setState","get","res","data","console","log","getLatestCoins"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAKA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BC,IAA5B,uDAA9B;AARiB;AASlB,G,CACD;;;;;2CACuBF,U,EAAY;AACjC,WAAKG,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAEA;AAAb,OAAd;AACD,K,CACD;;;;;;;;;;;;;;;uBAEkBL,KAAK,CAACS,GAAN,CAAU,uCAAV,C;;;AAAZC,gBAAAA,G;;uBACiBA,G;;;;AAAfC,gBAAAA,I,QAAAA,I;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,qBAAKH,QAAL,CAAc;AAACJ,kBAAAA,QAAQ,EAAEO;AAAX,iBAAd;;;;;;;;;;;;;;;QAEF;;;;wCACoB;AAClB,WAAKG,cAAL;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKX,KAAL,CAAWE,UAAlC;AAA8C,QAAA,kBAAkB,EAAE,KAAKC,sBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAA7B;AAAuC,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAnCeR,S;;AAsClB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CoinTable from './components/CoinTable';\nimport SearchBar from './components/SearchBar';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // set state with coinData (to eventually call an API) and the searcbar text\n    this.state = {\n      coinData: [],\n      searchText: ''\n    }\n\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n  }\n  //handle the searched text and update based on value\n  handleSearchTextChange(searchText) {\n    this.setState({searchText: searchText})\n  }\n  //get the latest coins from the Express server at localhost:5000\n  async getLatestCoins() {\n    let res = await axios.get('http://localhost:5000/api/latestCoins');\n    let { data } = await res;\n    console.log(data);\n    this.setState({coinData: data});\n  }\n  // once the component mounts, loads a default page of coins before searching\n  componentDidMount() {\n    this.getLatestCoins();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Cryptocurrency Analysis</h1>\n        <SearchBar searchText={this.state.searchText} onSearchTextChange={this.handleSearchTextChange}/>\n        <CoinTable coins={this.state.coinData} searchText={this.state.searchText}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}