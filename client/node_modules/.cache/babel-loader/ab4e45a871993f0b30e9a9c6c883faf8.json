{"ast":null,"code":"import _classCallCheck from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/src/components/CoinTable.js\";\nimport React, { Component } from 'react';\nimport CoinRow from './CoinRow';\n\nvar CoinTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CoinTable, _React$Component);\n\n  function CoinTable(props) {\n    _classCallCheck(this, CoinTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CoinTable).call(this, props));\n  }\n\n  _createClass(CoinTable, [{\n    key: \"render\",\n    value: function render() {\n      // initialize an empty array of row values and the searchText passed from SearchBar and App.js\n      var rows = [];\n      var searchText = this.props.searchText.toLowerCase(); // for each coin in the rows array, check if the coin met the name or ticker search criteria\n      // if yes, then add the CoinRow for rendering, else, ignore\n      // (logic can be cleaned up)\n\n      this.props.coins.forEach(function (coin) {\n        var coinMetSearchCriteria = false;\n\n        if (!(coin.name.toLowerCase().indexOf(searchText) === -1)) {\n          coinMetSearchCriteria = true;\n        }\n\n        if (coinMetSearchCriteria === false) {\n          if (!(coin.symbol.toLowerCase().indexOf(searchText) === -1)) {\n            coinMetSearchCriteria = true;\n          }\n        }\n\n        if (coinMetSearchCriteria === true) {\n          rows.push(React.createElement(CoinRow, {\n            coin: coin,\n            key: coin.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }));\n        }\n      }); // once rows is finalized, pass the rows to the table\n\n      return React.createElement(\"table\", {\n        className: \"table table-dark table-hover table-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        scope: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Ticker\"), React.createElement(\"th\", {\n        scope: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Price (USD)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, rows));\n    }\n  }]);\n\n  return CoinTable;\n}(React.Component);\n\nexport { CoinTable as default };","map":{"version":3,"sources":["/Users/danielbuchholz/Desktop/full-stack-cryptos/client/src/components/CoinTable.js"],"names":["React","Component","CoinRow","CoinTable","props","rows","searchText","toLowerCase","coins","forEach","coin","coinMetSearchCriteria","name","indexOf","symbol","push","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kFACXA,KADW;AAElB;;;;6BAEQ;AACP;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,UAAU,GAAG,KAAKF,KAAL,CAAWE,UAAX,CAAsBC,WAAtB,EAAnB,CAHO,CAIP;AACA;AACA;;AACA,WAAKH,KAAL,CAAWI,KAAX,CAAiBC,OAAjB,CAAyB,UAAAC,IAAI,EAAI;AAC/B,YAAIC,qBAAqB,GAAG,KAA5B;;AACA,YAAI,EAAED,IAAI,CAACE,IAAL,CAAUL,WAAV,GAAwBM,OAAxB,CAAgCP,UAAhC,MAAgD,CAAC,CAAnD,CAAJ,EAA2D;AACzDK,UAAAA,qBAAqB,GAAG,IAAxB;AACD;;AACD,YAAIA,qBAAqB,KAAK,KAA9B,EAAqC;AACnC,cAAG,EAAED,IAAI,CAACI,MAAL,CAAYP,WAAZ,GAA0BM,OAA1B,CAAkCP,UAAlC,MAAkD,CAAC,CAArD,CAAH,EAA4D;AAC1DK,YAAAA,qBAAqB,GAAG,IAAxB;AACD;AACF;;AAED,YAAIA,qBAAqB,KAAK,IAA9B,EAAoC;AAClCN,UAAAA,IAAI,CAACU,IAAL,CACE,oBAAC,OAAD;AAAS,YAAA,IAAI,EAAEL,IAAf;AAAqB,YAAA,GAAG,EAAEA,IAAI,CAACM,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF,OAhBD,EAPO,CAwBP;;AACA,aACE;AAAO,QAAA,SAAS,EAAC,uCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQX,IAAR,CARF,CADF;AAYD;;;;EA1CoCL,KAAK,CAACC,S;;SAAxBE,S","sourcesContent":["import React, { Component } from 'react';\nimport CoinRow from './CoinRow';\n\nexport default class CoinTable extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // initialize an empty array of row values and the searchText passed from SearchBar and App.js\n    const rows = [];\n    const searchText = this.props.searchText.toLowerCase();\n    // for each coin in the rows array, check if the coin met the name or ticker search criteria\n    // if yes, then add the CoinRow for rendering, else, ignore\n    // (logic can be cleaned up)\n    this.props.coins.forEach(coin => {\n      let coinMetSearchCriteria = false;\n      if (!(coin.name.toLowerCase().indexOf(searchText) === -1)) {\n        coinMetSearchCriteria = true;\n      }\n      if (coinMetSearchCriteria === false) {\n        if(!(coin.symbol.toLowerCase().indexOf(searchText) === -1)) {\n          coinMetSearchCriteria = true;\n        }\n      }\n\n      if (coinMetSearchCriteria === true) {\n        rows.push(\n          <CoinRow coin={coin} key={coin.id}/>\n        );\n      }\n    })\n    // once rows is finalized, pass the rows to the table\n    return (\n      <table className=\"table table-dark table-hover table-sm\">\n        <thead>\n          <tr>\n            <th scope=\"col-md-3\">Name</th>\n            <th scope=\"col-md-3\">Ticker</th>\n            <th scope=\"col-md-3\">Price (USD)</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}