{"ast":null,"code":"import _classCallCheck from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielbuchholz/Desktop/full-stack-cryptos/client/src/components/CoinRow.js\";\nimport React, { Component } from 'react';\n\nvar CoinRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CoinRow, _React$Component);\n\n  function CoinRow() {\n    _classCallCheck(this, CoinRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CoinRow).apply(this, arguments));\n  }\n\n  _createClass(CoinRow, [{\n    key: \"render\",\n    value: function render() {\n      var coin = this.props.coin;\n      if (!coin) return; // basic structure for a row -- the coin's name, symbol, price, etc.\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, coin.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, coin.symbol), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, coin.quote.USD.price));\n    }\n  }]);\n\n  return CoinRow;\n}(React.Component);\n\nexport { CoinRow as default };","map":{"version":3,"sources":["/Users/danielbuchholz/Desktop/full-stack-cryptos/client/src/components/CoinRow.js"],"names":["React","Component","CoinRow","coin","props","name","symbol","quote","USD","price"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,O;;;;;;;;;;;;;6BACV;AACP,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,UAAG,CAACA,IAAJ,EAAU,OAFH,CAGP;;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,MAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAeC,KAApB,CAHF,CADF;AAOD;;;;EAZkCT,KAAK,CAACC,S;;SAAtBC,O","sourcesContent":["import React, { Component } from 'react';\n\nexport default class CoinRow extends React.Component {\n  render() {\n    const coin = this.props.coin;\n    if(!coin) return;\n    // basic structure for a row -- the coin's name, symbol, price, etc.\n    return (\n      <tr>\n        <td>{coin.name}</td>\n        <td>{coin.symbol}</td>\n        <td>{coin.quote.USD.price}</td>\n      </tr>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}